var d=Object.defineProperty;var h=(s,e,t)=>e in s?d(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var a=(s,e,t)=>h(s,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))o(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const c of n.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&o(c)}).observe(document,{childList:!0,subtree:!0});function t(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerPolicy&&(n.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?n.credentials="include":r.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(r){if(r.ep)return;r.ep=!0;const n=t(r);fetch(r.href,n)}})();const p=`<div class="glostr-shader">
    <button class="toggle-code">
        <span class="material-icons purple show-shader toggle">image</span>
        <span class="show-code toggle">
            <span class="white">{</span><span class="purple">gl</span><span class="white">}</span>
        </span>
    </button>
    <div class="shader-editor"></div>
    <canvas class="shader-canvas"></canvas>  
</div>
`;class u{constructor(e,t){a(this,"_container");const o=f(p),r=i(o,"shader-canvas"),n=i(o,"shader-editor");this._container=o,this.keepAspectRatio(t),this.setupWebGL(r),this.setupAce(n,e)}get container(){return this._container}keepAspectRatio(e){const t=this.container;new ResizeObserver(()=>{e!=null&&(t.style.height=`${t.offsetWidth/e}px`)}).observe(t)}setupWebGL(e){if(!e.getContext("webgl2"))throw alert("WebGL not supported!"),new Error("WebGL not supported!")}setupAce(e,t){}}function f(s){return new DOMParser().parseFromString(s,"text/html").body.firstElementChild}function i(s,e){const t=s.getElementsByClassName(e);if(t.length==0)throw new Error(`${s} does not contain any children of class ${e}.`);return t[0]}class g{shader(e,t=3/4){return new u(e,t)}}const l=["basic","cyber-fuji","grid","starfield"],m=document.getElementById("glostr-posts"),y=l[Math.floor(Math.random()*l.length)],b=new g;fetch("shaders/"+y+".glsl").then(s=>s.text()).then(s=>b.shader(s,4/3)).then(s=>m.appendChild(s.container));
